convert json to txt
This code snippet is likely part of a GUI application that provides functionalities for converting object annotation data in JSON format to the YOLO format. The user can select input and output directories and a class file that contains class names. The application then reads JSON files from the input directory, processes the annotations, and saves them as text files in the YOLO format in the specified output directory.

Button Connections and Methods
Input Button:

Button Connection: self.inputButton.clicked.connect(self.select_input_directory)
Method select_input_directory: Prompts the user to select an input directory containing JSON files with annotation data. The selected directory path is then displayed in a line edit widget (self.inputLineEdit).
Output Button:

Button Connection: self.outputButton.clicked.connect(self.select_output_directory)
Method select_output_directory: Prompts the user to select an output directory where the converted YOLO files will be saved. The selected directory path is then displayed in another line edit widget (self.outputLineEdit). If the input directory has already been selected, it triggers the conversion process; otherwise, it shows a warning message.
Classes Button:

Button Connection: self.classes.clicked.connect(self.select_classes_file)
Method select_classes_file: Prompts the user to select a class file (*.txt) that contains the names of the object classes. It reads the class names and stores them in self.class_names, and calculates the number of classes.
Method convert_to_yolo(input_dir, output_dir):

Parameters:
input_dir: The path to the directory containing JSON annotation files.
output_dir: The path to the directory where the converted YOLO files will be saved.
Functionality: Reads JSON files from the input directory and converts the annotations to the YOLO format. It extracts the object's class name and bounding box coordinates from the JSON data, calculates the corresponding YOLO parameters, and writes them to a text file in the output directory. A message is displayed once the conversion is complete.
Example of YOLO Format Conversion
The conversion to YOLO format involves computing the normalized x and y center coordinates, width, and height of the bounding box. These values are calculated as:

x_center = (x_min + x_max) / (2.0 * width)
y_center = (y_min + y_max) / (2.0 * height)
w = int(mark['rect']['int_w']) / width
h = int(mark['rect']['int_h']) / height
The class index is also determined based on the class name. The output line for each object is formatted as:

Copy code
class_idx x_center y_center w h
Additional Remarks
The code assumes that the JSON files contain specific keys (e.g., image, width, height, mark, name, rect, int_x, etc.). It's important to ensure that the JSON files follow this structure for the conversion to work properly.

Overall, this code snippet provides a comprehensive solution for users who want to convert object annotation data from JSON format to YOLO format, with a user-friendly interface for selecting directories and class files, and handling the conversion process.